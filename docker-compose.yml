services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    platform: linux/amd64
    ports:
      - "55432:${POSTGRES_PORT}"
    environment:
      NODE_ENV: docker
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/seed:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ASP.NET Core API
  aspnet-api:
    platform: linux/amd64
    build:
      context: ./aspnet-api
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:${ASPNET_PORT}:${ASPNET_PORT}"
    environment:
      NODE_ENV: docker
      ASPNETCORE_ENVIRONMENT: Docker
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./sample-data:/app/sample-data
      - ./node-asp-tmp:/app/node-asp-tmp

  # Node.js API
  node-api:
    platform: linux/amd64
    build:
      context: ./node-api
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:${NODE_PORT}:${NODE_PORT}"
    environment:
      NODE_ENV: docker
    env_file:
      - .env
    # DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./sample-data:/app/sample-data
      - ./node-asp-tmp:/app/node-asp-tmp

volumes:
  postgres_data: 